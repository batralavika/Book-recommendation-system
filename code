24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 1/7
In [1]:
In [2]:
In [3]:
In [4]:
In [5]:
In [6]:
C:\Users\hp\AppData\Local\Temp\ipykernel_14368\3819754567.py:1: DtypeWarning:
Columns (3) have mixed types. Specify dtype option on import or set low_memor
y=False.
books = pd.read_csv('books.csv')
Out[3]: 'http://images.amazon.com/images/P/0002005018.01.MZZZZZZZ.jpg'
Out[4]:
User-ID Location Age
0 1 nyc, new york, usa NaN
1 2 stockton, california, usa 18.0
2 3 moscow, yukon territory, russia NaN
3 4 porto, v.n.gaia, portugal 17.0
4 5 farnborough, hants, united kingdom NaN
Out[5]:
User-ID ISBN Book-Rating
0 276725 034545104X 0
1 276726 0155061224 5
2 276727 0446520802 0
3 276729 052165615X 3
4 276729 0521795028 6
(271360, 8)
(1149780, 3)
(278858, 3)
import numpy as np
import pandas as pd
books = pd.read_csv('books.csv')
users = pd.read_csv('users.csv')
ratings = pd.read_csv('ratings.csv')
books['Image-URL-M'][1]
users.head()
ratings.head()
print(books.shape)
print(ratings.shape)
print(users.shape)
24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 2/7
In [7]:
In [8]:
In [9]:
In [10]:
In [11]:
In [12]:
Popularity Based Recommender System
In [13]:
Out[7]: ISBN 0
Book-Title 0
Book-Author 1
Year-Of-Publication 0
Publisher 2
Image-URL-S 0
Image-URL-M 0
Image-URL-L 3
dtype: int64
Out[8]: User-ID 0
Location 0
Age 110762
dtype: int64
Out[9]: User-ID 0
ISBN 0
Book-Rating 0
dtype: int64
Out[10]: 0
Out[11]: 0
Out[12]: 0
books.isnull().sum()
users.isnull().sum()
ratings.isnull().sum()
books.duplicated().sum()
ratings.duplicated().sum()
users.duplicated().sum()
ratings_with_name = ratings.merge(books,on='ISBN')
24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 3/7
In [14]:
Out[14]:
Book-Title num_ratings
0 A Light in the Storm: The Civil War Diary of ... 4
1 Always Have Popsicles 1
2 Apple Magic (The Collector's series) 1
3 Ask Lily (Young Women of Faith: Lily Series, ... 1
4 Beyond IBM: Leadership Marketing and Finance ... 1
... ... ...
241066 Ã?Â?lpiraten. 2
241067 Ã?Â?rger mit Produkt X. Roman. 4
241068 Ã?Â?sterlich leben. 1
241069 Ã?Â?stlich der Berge. 3
241070 Ã?Â?thique en toc 2
241071 rows × 2 columns
num_rating_df = ratings_with_name.groupby('Book-Title').count()['Book-Rating'].
num_rating_df.rename(columns={'Book-Rating':'num_ratings'},inplace=True)
num_rating_df
24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 4/7
In [15]:
C:\Users\hp\AppData\Local\Temp\ipykernel_14368\3320847543.py:1: FutureWarnin
g: The default value of numeric_only in DataFrameGroupBy.mean is deprecated.
In a future version, numeric_only will default to False. Either specify numer
ic_only or select only columns which should be valid for the function.
avg_rating_df = ratings_with_name.groupby('Book-Title').mean()['Book-Ratin
g'].reset_index()
Out[15]:
Book-Title avg_rating
0 A Light in the Storm: The Civil War Diary of ... 2.250000
1 Always Have Popsicles 0.000000
2 Apple Magic (The Collector's series) 0.000000
3 Ask Lily (Young Women of Faith: Lily Series, ... 8.000000
4 Beyond IBM: Leadership Marketing and Finance ... 0.000000
... ... ...
241066 Ã?Â?lpiraten. 0.000000
241067 Ã?Â?rger mit Produkt X. Roman. 5.250000
241068 Ã?Â?sterlich leben. 7.000000
241069 Ã?Â?stlich der Berge. 2.666667
241070 Ã?Â?thique en toc 4.000000
241071 rows × 2 columns
avg_rating_df = ratings_with_name.groupby('Book-Title').mean()['Book-Rating'].r
avg_rating_df.rename(columns={'Book-Rating':'avg_rating'},inplace=True)
avg_rating_df
24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 5/7
In [16]:
In [17]:
In [18]:
In [19]:
Collaborative Filtering Based Recommender System
In [20]:
In [21]:
In [22]:
In [23]:
In [24]:
Out[16]:
Book-Title num_ratings avg_rating
0 A Light in the Storm: The Civil War Diary of ... 4 2.250000
1 Always Have Popsicles 1 0.000000
2 Apple Magic (The Collector's series) 1 0.000000
3 Ask Lily (Young Women of Faith: Lily Series, ... 1 8.000000
4 Beyond IBM: Leadership Marketing and Finance ... 1 0.000000
... ... ... ...
241066 Ã?Â?lpiraten. 2 0.000000
241067 Ã?Â?rger mit Produkt X. Roman. 4 5.250000
241068 Ã?Â?sterlich leben. 1 7.000000
241069 Ã?Â?stlich der Berge. 3 2.666667
241070 Ã?Â?thique en toc 2 4.000000
241071 rows × 3 columns
Out[19]: 'http://images.amazon.com/images/P/0439136350.01.MZZZZZZZ.jpg'
popular_df = num_rating_df.merge(avg_rating_df,on='Book-Title')
popular_df
popular_df = popular_df[popular_df['num_ratings']>=250].sort_values('avg_rating
popular_df = popular_df.merge(books,on='Book-Title').drop_duplicates('Book-Titl
popular_df['Image-URL-M'][0]
x = ratings_with_name.groupby('User-ID').count()['Book-Rating'] > 200
padhe_likhe_users = x[x].index
filtered_rating = ratings_with_name[ratings_with_name['User-ID'].isin(padhe_lik
y = filtered_rating.groupby('Book-Title').count()['Book-Rating']>=50
famous_books = y[y].index
final_ratings = filtered_rating[filtered_rating['Book-Title'].isin(famous_books
pt = final_ratings.pivot_table(index='Book-Title',columns='User-ID',values='Boo
24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 6/7
In [25]:
In [26]:
In [27]:
In [28]:
In [29]:
Out[26]:
User-ID 254 2276 2766 2977 3363 4017 4385 6251 6323 6543 ... 271705 273979 2
Book-Title
1984 9.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 10.0 0.0
1st to Die: A
Novel
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 9.0 ... 0.0 0.0
2nd Chance 0.0 10.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
4 Blondes 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
A Bend in
the Road
0.0 0.0 7.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
... ... ... ... ... ... ... ... ... ... ... ... ... ...
Year of
Wonders
0.0 0.0 0.0 7.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 9.0
You Belong
To Me
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
Zen and the
Art of
Motorcycle
Maintenance:
An Inquiry
into Values
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
Zoya 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
\O\" Is for
Outlaw"
0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 ... 0.0 0.0
706 rows × 810 columns
Out[29]: (706, 706)
pt.fillna(0,inplace=True)
pt
from sklearn.metrics.pairwise import cosine_similarity
similarity_scores = cosine_similarity(pt)
similarity_scores.shape
24/08/2023, 21:51 book-recommender-system (1) - Jupyter Notebook
localhost:8888/notebooks/book-recommender-system (1).ipynb# 7/7
In [37]:
In [40]:
In [ ]:
In [ ]:
In [ ]:
In [ ]:
In [ ]:
In [ ]:
In [ ]:
Harry Potter and the Prisoner of Azkaban (Book 3)
Harry Potter and the Goblet of Fire (Book 4)
Harry Potter and the Sorcerer's Stone (Harry Potter (Paperback))
Harry Potter and the Sorcerer's Stone (Book 1)
Harry Potter and the Order of the Phoenix (Book 5)
def recommend(book_name):
 # index fetch
 index = np.where(pt.index==book_name)[0][0]
 similar_items = sorted(list(enumerate(similarity_scores[index])),key=lambda
 
 for i in similar_items:
 print(pt.index[i[0]])
recommend('Harry Potter and the Chamber of Secrets (Book 2)')
